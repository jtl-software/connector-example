name: Test ftp deployment

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'Tag to deploy'

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.2', '7.3', '7.4', '8.0']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl
          tools: phpunit

      - name: Run composer
        uses: php-actions/composer@v2

      - name: Run unit tests
        uses: php-actions/phpunit@v9
        with:
          configuration: ./phpunit.xml.dist
          bootstrap: ./vendor/autoload.php
  deploy:
    needs: test
    runs-on: ubuntu-latest
    env:
      CONNECTOR_VERSION: ${{ github.event.inputs.tag }}
    steps:
      - name: System praparation
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq ftp-upload

      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout release tag
        run: |
          git fetch --all --tags
          git checkout tags/$CONNECTOR_VERSION -b tmp

      - name: Run composer
        uses: php-actions/composer@v2

      - name: Crate Zip Dir
        run: mkdir ./deployment

      - name: Create release name
        run: |
          echo "RELEASE_NAME=connector-example-$CONNECTOR_VERSION.zip" >> $GITHUB_ENV

      - name: Zip
        uses: papeloto/action-zip@v1
        with:
          files: .
          dest: ./deployment/${{ env.RELEASE_NAME }}

      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: connector-build
          path: ./deployment/${{ env.RELEASE_NAME }}
          if-no-files-found: error

      - name: FTP Deploy
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: ftp-upload --host $FTP_SERVER --user $FTP_USER --passive --password $FTP_PASSWORD ./deployment/${{ env.RELEASE_NAME }}